#?# 1) que es una array o lista en python ##
#* un array es un espacio vasio en el codigo (memoria) que se puede llenar para su uso #
#* para declarar una lista vacia # 
# ejemp #
lista = []
# para una lista con valores iniciales solo se deve crear la lista y definir sus valores #
lista1 = [1,2,3,4,5,6,7,8,9,10]
lista2 = ["1","2","3","4","5"]
lista3 = [10, 20, 30, 40, 50]

#?# 2) como se accede a los elementos en una lista ##
#* para acceder al primer elemento de una lista es necesario crear un siclo y definir cual es su rango #
# ejemp #
for lista1 in range(1,2):
    print (f"el primer numero es {lista1}")
    print("--------------------------------------------------------------------")


#* el indice negativo es una forma de recorrer la lista en reversa es decir -1 seria el ultimo caracter almacenado y -2 el penultimo
# ejemp #
n = len(lista2)
for i in range(n-1,-1,-1):
    print(lista2[i])
    print("--------------------------------------------------------------------")


#* si se intenta acceder a un indice que no existe el programa dara error y te dira que el indise no existe
# ejemplo primer y ultimo elemento #
lst = [10, 20, 30, 40, 50]
primelement = lst[0]
ultelement = lst[len(lst) -1]
print(f"este es tu peimer elemento {primelement}")
print("--------------------------------------------------------------------")

print(f"este es tu ultimo elemento {ultelement}")
print("--------------------------------------------------------------------")


#?# 3) que es y como se usa el "slicing" o rebanado de listas ##
#* que es?: es una herramienta que permite porcionar de secuencias de elementos pueden ser listas, tuplas o cadenas de texto con poco codigo#
# ejemp #
(lista[::1])

#* dejar un espacio vasio en la secuencia se refiere al inicio o el final de una secuencia respectiva mente #
# Por ejemplo, si tienes una cadena de caracteres cadena = '¡Oh, gloria inmarcesible! ¡Oh, júbilo inmortal!', #
# la expresión cadena[:30] extraerá los caracteres desde el inicio hasta la posición 30 (excluida), #
# mientras que cadena[30:] extraerá los caracteres desde la posición 30 hasta el final de la cadena #
(lista[:30])
(lista[30:])
# ejemp #
lst2 = [10,20,30,40,50,60,70,80,90,100]
elem1 = lst2 [3:7]
elem2 = lst2 [1:4]
elem3 = lst2 [2:]
print(f"estetos son los elementos del 3 al 6 {elem1} ")
print("--------------------------------------------------------------------")

print(f"estos son los primeros 3 {elem2} ")
print("--------------------------------------------------------------------")

print(f"estos son desde el 2 asta el final {elem3}")
print("--------------------------------------------------------------------")


#?# 4) para cambiar los elementos de una lista en python se puede seleccionar el elemento a modificar por su indice e indicar el valor del reemplazo ##
#* si se intenta cambiar un elemento que no existe te dara un IndexError
lst3 = [10,20,30,40,50,60]
lst3 [2] = 99 
print(lst3)
print("--------------------------------------------------------------------")


#?# 5) para agregar nuevos elementos a la lista se debe de usar una funcion que cambiara el resultado dependiendo de lo que desees hacer ##
lst4 = [10,20,30,40,50,60,70,80,90,100]
#* para añadir elementos al final se usa append() #
# ejemp #
lst4.append(110)
#* para una posicion especifica se usa insert() #
# ejemp #
lst4.insert(2, 25)
#* para combinar dos listas en una se usa el operador + 
# ejemp #
lst5 = lst3 + lst4
print(lst4)
print("--------------------------------------------------------------------")
print(lst5)
print("--------------------------------------------------------------------")


#?# 6) al igual que al agregarlos se usan funciones
#* remove(): Elimina el primer elemento que coincida con el valor proporcionado. #
# ejemp #
removido = lst5.remove(40)
#* .pop(): Elimina un elemento en un índice específico y lo devuelve, o elimina el último elemento si no se pasa índice.
# ejemp #
eliminado = lst5.pop(1)
#* del: Elimina un elemento en un índice específico o elimina toda la lista. #
# ejemp #  ///si quieres eliminar toda la lista no le debes poner indice///
del lst5[6]
#* clear(): elimina todos los items de la lista dejandola vacia pero no deja de existir
# ejemp #
lst6 = [10,20,30,40,50,60,70,80,90,]
lst6.clear()

print(lst5)
print("--------------------------------------------------------------------")
print(lst6)
print("--------------------------------------------------------------------")

#?# 7) se usa un ciclo for para recorrer la lista y con false o true se identifica el caracter # 
#* (in): verifica si un elemento esta en la lista, este devuelve true o false
#* index(): devuelve el indice de la primera aparicion de un elemento, lanza un (valueError) si no lo encuentra.
#* (for): puedes recorrer la lista manualmente y realizar acciones cuando encuentras un elemento.
#* expresion de lista: permite filtrar elementos que cumplen un criterio.
# ejemp #
busqueda = 30
encontrado = false
for elemeto in lst3:
    if elemeto == busqueda:
        encontrado = True
        break
if encontrado:
    print(f"el elemento {busqueda} si se encuentra en la lista")
else:
    print(f"el elemento que buscas no se encuentra en la lista")
print("--------------------------------------------------------------------")

#* para saver el indice se usa la funcion index()#
# ejemp #
indice = lst3.index(30)
print(f"el indice de 30 se encuentra en la posicion{indice}")

#* para contar cuantas veces aparece un valor se usa count() #
# ejemp #
cantidad = lst3.count()
print(f"hay {cantidad} de elementos en la lista")
